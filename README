Beggerss' Ultimate Algorithm Repository

I'll be implementing as many canonical CS algorithms as I have time (and motivation) to in Python. Feel free to fork! But don't send pull requests, this is to learn.

The solutions might not be the most efficient--the code will be geared towards readability and pedagogy.

Thanks to EKAlgorithms (github.com/EvgenyKarkan/EKAlgorithms) for the idea and starting list.


Array
----- 
1. Index of maximum element in array. 
2. Find longest string in array of strings. 
3. Find shortest string in array of strings.
4. Array reverse.
5. Intersection of two arrays.
6. Union of two arrays (with remove duplicates).
7. Find duplicates.
8. Array with N unique/not unique random objects.

Search
------ 
1. Linear search.
2. Binary search.

Sort
----
1. Bubble sort.
2. Shell sort.
3. Merge sort.  
4. Quick sort.  
5. Insertion sort.
6. Selection sort.

String
------
1. Palindrome or not.
2. String reverse.
3. Words count.
4. Permutations of string. 
5. Occurrences of each character (a - z).
6. Count needles in a haystack.
7. Random string.

Number
-------
1. Sieve of Eratosthenes.
2. Great common divisor (GCD).
3. Least common multiple (LCM).
4. Factorial.
5. Fibonacci numbers.
6. Sum of digits.
7. Binary to decimal conversion.
8. Decimal to binary conversion.
9. Fast exponentiation.
10. Number reverse.
11. Even/odd check.
12. Leap year check.

Data structures
---------------
1. Stack (LIFO).
2. Queue (FIFO).
3. Deque.
4. Linked list.
5. Graph 
    - DFS (depth-first search);
    - BFS (breadth-first search).
6. Binary search tree (BST).
